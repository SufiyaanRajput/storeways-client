import Head from 'next/head';
import { Input } from 'themes/classic/common';
import { Row } from "antd";
import { Button, Container, Section } from '@/base/index';
import { SectionTitle } from '@/base/Section/Section';
import PostCarousel from 'react-multi-carousel';
import { useContext } from 'react';
import storeContext from '../../../../store/store';
import { observer } from "mobx-react-lite";
import ProductSection from './ProductSection/ProductSection';
import Newsletter from './Newsletter/Newsletter';
import { useRouter } from 'next/router';
import { 
  Slide, 
  SlideCTAWrapper, 
  Title,
  SectionImgCard, 
  BgSection,
  FeatureWrapper,
  FeatureDescription,
  BlogPostsCol,
  BlogImageWrapper,
  BlogPostMeta,
  BlogPostTitle,
  BlogPostMetaDescription,
  Carousel,
  PosterImgCol,
  Posters,
} from './styles';
import Image from 'next/image';
import { toJS } from 'mobx';

const HomeComponent = observer(() => {
  const store = useContext(storeContext);
  const router = useRouter();

  const onBannerCTAClick = (targetLink) => {
    router.push(targetLink);
  }

  return(
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {
          store.settings?.pages.home.layout.map((layout, i) => {
            switch(layout.id){
              case 'CAROUSEL':
              return(
                <Carousel autoplay key={i}>
                  {
                    layout.items.map((slide, i) => (
                      <div key={i}>
                        <Slide config={{align: slide.align, bgImg: slide.banner.url}}>
                          <div>
                            <Title config={{bgColor: slide.title.bgColor, color: slide.title.color}}>{slide.title.text}</Title>
                            <SlideCTAWrapper config={{align: slide.cta.align}}>
                              <Button type={slide.cta.type} onClick={() => onBannerCTAClick(slide.cta.targetLink)} size="large">{slide.cta.text}</Button>
                            </SlideCTAWrapper>
                          </div>
                        </Slide>
                      </div>
                    ))
                  }
                </Carousel>
              );
              case 'BANNER':
              return(
                <Section key={i}>
                  <Container $maxWidth="1300px">
                    <Slide config={{align: layout.items.align, bgImg: layout.items.banner.url}}>
                      <div>
                        <Title config={{bgColor: layout.items.title.bgColor, color: layout.items.title.color}}>{layout.items.title.text}</Title>
                        <SlideCTAWrapper config={{align: layout.items.cta.align}}>
                          <Button type={layout.items.cta.type} onClick={() => onBannerCTAClick(layout.items.cta.targetLink)} size="large">{layout.items.cta.text}</Button>
                        </SlideCTAWrapper>
                      </div>
                    </Slide>
                  </Container>
                </Section>
              );
              case 'POSTERS':
                return(
                  <Section key={i}>
                    <Container $maxWidth="1300px">
                      <Posters>
                        {
                          layout.items.map((poster, i) => (
                            <PosterImgCol span={6} key={i}>
                              <SectionImgCard onClick={() => onBannerCTAClick(poster.targetLink)}>
                                <Image src={poster.poster.url} alt={poster.alt || `poster${i}`} layout="fill"/>
                              </SectionImgCard>
                            </PosterImgCol>
                          ))
                        }
                      </Posters>
                    </Container>
                  </Section>
                );
              case 'PRODUCTS':
                return(
                  <ProductSection key={i} layout={layout} justify="center"/>
                );
              case 'FEATURES':
                return(
                  <BgSection key={i} bgColor={layout.sectionBgColor}>
                    <Container $maxWidth="1300px">
                      <Row gutter={[16, 16]} justify="center">
                        {
                          layout.items.map((feature, i) => (
                            <FeatureWrapper xs={24} sm={16} md={12} lg={8} xl={8} key={i}>
                              <h3>{feature.title}</h3>
                              <FeatureDescription>{feature.description}</FeatureDescription>
                            </FeatureWrapper>
                          ))
                        }
                      </Row>
                    </Container>
                  </BgSection>
                );
              case 'BLOG_CAROUSEL':
                return(
                  <Section key={i}>
                    <Container $maxWidth="1300px">
                      <SectionTitle orientation="center"><h3>Blog</h3></SectionTitle>
                      <PostCarousel responsive={{
                          superLargeDesktop: {
                            breakpoint: { max: 4000, min: 3000 },
                            items: 3
                          },
                          desktop: {
                            breakpoint: { max: 3000, min: 1024 },
                            items: 3
                          },
                          tablet: {
                            breakpoint: { max: 1024, min: 768 },
                            items: 2
                          },
                          mobile: {
                            breakpoint: { max: 768, min: 0 },
                            items: 1
                          }
                        }}
                        ssr={true}>
                        {
                          posts.map((post, i) => (
                            <BlogPostsCol key={i} className={(() => {
                              if (i == 0) return 'firstItem';
                              if (posts.length - 1) return 'lastItem';
                              return '';
                            })()}>
                              <BlogImageWrapper>
                                <Image src={post.image} layout="fill"/>
                              </BlogImageWrapper>
                              <BlogPostMeta>
                                <BlogPostTitle>{post.title}</BlogPostTitle>
                                <BlogPostMetaDescription>{post.metaDescription}</BlogPostMetaDescription>
                              </BlogPostMeta>
                              <Button size="large">Read More</Button>
                            </BlogPostsCol>
                          ))
                        }
                      </PostCarousel>
                    </Container>
                  </Section>
                );
              case 'NEWSLETTER':
                return(
                 <Newsletter key={i}/>
                );
            }
          })
        }
      </main>
    </>
  );
});

export default HomeComponent;